name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Validate JSON files
        run: |
          # Find all JSON files excluding node_modules, build, dist, and .git directories
          json_files=$(find . -type f -name "*.json" \
            -not -path "*/node_modules/*" \
            -not -path "*/build/*" \
            -not -path "*/dist/*" \
            -not -path "*/.git/*")
          
          exit_code=0
          
          # Validate each JSON file
          for file in $json_files; do
            echo "Validating $file..."
            if ! python -m json.tool "$file" > /dev/null 2> /tmp/json_error.txt; then
              error_msg=$(cat /tmp/json_error.txt)
              echo "::error file=$file::JSON parse error: $error_msg"
              echo "ERROR in $file: $error_msg"
              exit_code=1
            else
              echo "✓ $file is valid"
            fi
          done
          
          if [ $exit_code -ne 0 ]; then
            echo "::error::One or more JSON files are invalid"
            exit 1
          fi
          
          echo "All JSON files are valid!"

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    
    # IMPORTANT: Before this workflow can deploy to GitHub Pages, you must:
    # 1. Go to your repository Settings → Pages
    # 2. Under "Build and deployment", set Source to "GitHub Actions"
    # This allows GitHub Actions workflows to control the Pages deployment.
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # ===========================================================================
      # BUILD STEP PLACEHOLDER
      # ===========================================================================
      # TODO: Add your repository's build commands here.
      # 
      # For example, if you use Node.js:
      #   - name: Set up Node.js
      #     uses: actions/setup-node@v4
      #     with:
      #       node-version: '20'
      #
      #   - name: Install dependencies
      #     run: npm ci
      #
      #   - name: Build
      #     run: npm run build
      #
      # For other build systems, add the appropriate steps here.
      # ===========================================================================
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # IMPORTANT: Update this path if your build output directory is different.
          # Common alternatives: ./build, ./dist, ./_site, ./out
          # This repository appears to serve files from the root, so we use ./public
          # If your build outputs to a different directory, change this path accordingly.
          path: './public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
